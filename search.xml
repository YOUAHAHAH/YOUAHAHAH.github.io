<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue3Ref和Reactive</title>
      <link href="/2022/11/04/Vue3%E4%B8%AD%E7%9A%84Ref/"/>
      <url>/2022/11/04/Vue3%E4%B8%AD%E7%9A%84Ref/</url>
      
        <content type="html"><![CDATA[<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><code>无响应式</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = <span class="string">&quot;七龙珠&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data = <span class="string">&quot;狐妖小红娘&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="ref"><a href="#ref" class="headerlink" title="ref"></a><code>ref</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> data = <span class="title function_">ref</span>(<span class="string">&quot;七龙珠&quot;</span>);  <span class="comment">// data 返回的是ES6中的class 所以修改或者取值的时候需要在 data 后面加上 .value</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data.<span class="property">value</span> = <span class="string">&quot;狐妖小红娘&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="isRef"><a href="#isRef" class="headerlink" title="isRef"></a><code>isRef</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, isRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> data = <span class="title function_">ref</span>(<span class="string">&quot;七龙珠&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> data1 = <span class="string">&#x27;狐妖小红娘&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 判断 data 数据是否为 ref 对象</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isRef</span>(data)); <span class="comment">// true </span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isRef</span>(data1)); <span class="comment">// false </span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="shallowRef"><a href="#shallowRef" class="headerlink" title="shallowRef"></a><code>shallowRef</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, shallowRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">ref</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;七龙珠&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> data1 = <span class="title function_">shallowRef</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;七龙珠&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// shallowRef 浅层次的响应式</span></span><br><span class="line"><span class="comment">// 当只有 shallowRef 修改的时候 修改的值中的 .value 后的赋值才是一个响应式</span></span><br><span class="line"><span class="comment">// shallowRef 如果和 ref 一起用则shallowRef也会变成深层次</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data.<span class="property">value</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;狐妖小红娘&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  data1.<span class="property">value</span>.<span class="property">name</span> = <span class="string">&quot;狐妖小红娘&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="triggerRef"><a href="#triggerRef" class="headerlink" title="triggerRef"></a><code>triggerRef</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, shallowRef, triggerRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">ref</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;狐妖小红娘&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> data1 = <span class="title function_">shallowRef</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;七龙珠&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data1.<span class="property">value</span>.<span class="property">name</span> = <span class="string">&quot;狐妖小红娘&quot;</span>;</span><br><span class="line">  <span class="title function_">triggerRef</span>(data1); <span class="comment">// triggerRef 会强制更新 data1 的值</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// shallowRef 和 ref 一起使用时,shallowRef 也会发送深层次的响应式,因为在 ref 中内部调用了 triggerRef</span></span><br></pre></td></tr></table></figure><h3 id="customRef"><a href="#customRef" class="headerlink" title="customRef"></a><code>customRef</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, customRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">myRef</span>(<span class="string">&quot;狐妖小红娘&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// customRef 也是浅层次的响应式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myRef</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">customRef</span>(<span class="function">(<span class="params">track, trigger</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">track</span>();</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">set</span>(<span class="params">newVal</span>) &#123;</span><br><span class="line">        value = newVal;</span><br><span class="line">        <span class="title function_">trigger</span>();</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data.<span class="property">value</span> = <span class="string">&quot;七龙珠&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Reactive"><a href="#Reactive" class="headerlink" title="Reactive"></a>Reactive</h2><h3 id="reactive"><a href="#reactive" class="headerlink" title="reactive"></a><code>reactive</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ref 支持所有类型  reactive 支持引用类型 Array Object Map Set</span></span><br><span class="line"><span class="comment">// ref 取值 赋值 需要加 .value  reactive 不需要 .value</span></span><br><span class="line"><span class="keyword">let</span> data = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;狐妖小红娘&quot;</span>,</span><br><span class="line">  <span class="attr">role</span>: <span class="string">&quot;东方月初&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"> <span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data); <span class="comment">// Proxy &#123;name: &#x27;狐妖小红娘&#x27;, role: &#x27;东方月初&#x27;&#125;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// reactive proxy 不能直接赋值 否则破坏响应式对象</span></span><br><span class="line"><span class="keyword">let</span> data1 = <span class="title function_">reactive</span>([]);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change1</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 模拟异步</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = [<span class="string">&quot;东方月初&quot;</span>, <span class="string">&quot;平丘月初&quot;</span>, <span class="string">&quot;白月初&quot;</span>];</span><br><span class="line">    data1.<span class="title function_">push</span>(...res);</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="readonly"><a href="#readonly" class="headerlink" title="readonly"></a><code>readonly</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive, readonly &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> data = <span class="title function_">reactive</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;东方月初&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> data1 = <span class="title function_">readonly</span>(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data.<span class="property">name</span> = <span class="string">&quot;白月初&quot;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data, data1);  <span class="comment">// Proxy &#123;name: &#x27;白月初&#x27;&#125; Proxy &#123;name: &#x27;白月初&#x27;&#125;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="shallowReactive"><a href="#shallowReactive" class="headerlink" title="shallowReactive"></a><code>shallowReactive</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive, shallowReactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> data = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;东方月初&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> data1 = <span class="title function_">shallowReactive</span>(&#123;</span><br><span class="line">  <span class="attr">obj</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;东方月初&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// shallowReactive 如果和 reactive 一起用则shallowRef也会变成深层次</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data.<span class="property">name</span> = <span class="string">&quot;平丘月初&quot;</span>;</span><br><span class="line">  data1.<span class="property">obj</span>.<span class="property">name</span> = <span class="string">&quot;白月初&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="toRef"><a href="#toRef" class="headerlink" title="toRef"></a>toRef</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; toRef, reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// toRef 只能修改响应式对象的值 非响应式视图毫无变化</span></span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">reactive</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;涂山红红&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;涂山&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> data1 = <span class="title function_">toRef</span>(data, <span class="string">&quot;address&quot;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  data1.<span class="property">value</span> = <span class="string">&quot;傲来国&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="toRefs"><a href="#toRefs" class="headerlink" title="toRefs"></a>toRefs</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; toRef, reactive, toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">reactive</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;涂山红红&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;涂山&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 大概实现原理</span></span><br><span class="line"><span class="comment">// const toRefs = (obj) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   const map = &#123;&#125;;</span></span><br><span class="line"><span class="comment">//   for (let i in obj) &#123;</span></span><br><span class="line"><span class="comment">//     map[i] = toRef(obj, i);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   return map;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="keyword">const</span> &#123; name, address &#125; = <span class="title function_">toRefs</span>(data); <span class="comment">// 解构对象，使每个值都变成响应式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  name.<span class="property">value</span> = <span class="string">&quot;涂山雅雅&quot;</span>;</span><br><span class="line">  address.<span class="property">value</span> = <span class="string">&quot;苦情树&quot;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(name, address);</span><br><span class="line">   <span class="comment">// ObjectRefImpl &#123;_object: Proxy, _key: &#x27;name&#x27;, _defaultValue: undefined, __v_isRef: true&#125; </span></span><br><span class="line">   <span class="comment">// ObjectRefImpl &#123;_object: Proxy, _key: &#x27;address&#x27;, _defaultValue: undefined, __v_isRef: true&#125;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="toRaw"><a href="#toRaw" class="headerlink" title="toRaw"></a>toRaw</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive, toRaw &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">reactive</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;涂山红红&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;涂山&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// toRaw 使用响应式数据脱离 Proxy</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data, <span class="title function_">toRaw</span>(data)); <span class="comment">// data[&quot;__v_raw&quot;]  内部调用 &quot;__v_raw&quot; 实现 toRaw</span></span><br><span class="line">  <span class="comment">// Proxy &#123;name: &#x27;涂山红红&#x27;, address: &#x27;涂山&#x27;&#125; &#123;name: &#x27;涂山红红&#x27;, address: &#x27;涂山&#x27;&#125;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奇怪的语录</title>
      <link href="/2022/11/01/%E5%A5%87%E6%80%AA%E7%9A%84%E8%AF%AD%E5%BD%95/"/>
      <url>/2022/11/01/%E5%A5%87%E6%80%AA%E7%9A%84%E8%AF%AD%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个世界就这么不完美，你想得到些什么就不得不失去些什么。 --柏拉图</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">傻子自以为聪明，但聪明人知道他自己是个傻子。 --莎士比亚</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一片树叶受到阳光照耀，它的背面一定是阴影，阳光越亮，阴影越深。 --维克多·雨果</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">没人对你说“不”的时候，你是长不大的。 --列夫·托尔斯泰</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我感到难过,不是因为你欺骗了我，而是因为我再也不能相信你了。 --弗里德里希·威廉·尼采</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">先相信自己，然后别人才会相信你。 --屠格涅夫</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果，不幸福，如果，不快乐，那就放手吧;如果，舍不得，放不下，那就痛苦吧。 --柏拉图</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">世上没有绝望的处境，只有对处境绝望的人。 --费洛姆</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">生活将以铁一般的逻辑粉碎任何发自内心的疏离和背叛倾向。 --弗朗茨·卡夫卡</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">看似截然相反的事物，往往会在当初极端对立的地方找到共同的归宿。 --斯蒂芬·茨威格</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">路躺在那，一直通到我家门口，大大小小的厄运但凡经过都不会找不到门的。 --威廉·福克纳</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只有永远躺在泥坑里的人，才不会再掉进坑里。 --黑格尔</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">镜子是我的朋友，因为我哭的时候它从来不笑。 --查理·卓别林</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">人一到群体中,智商就会严重降低，为了获取认同，个体愿意抛弃是非,用智商去换取那份让人倍感安全的归属感。 --勒庞</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">黄金时代是在我们面前，而不是在我们背后。 --培根</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有些人身怀戾气，是因为从未被温柔以待。 --阿尔贝·加缪</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">没有人值得你流泪，值得让你这么做的人不会让你哭泣。 --查尔斯·狄更斯</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">把“我打算如何”转变为“我做了什么”乃是成长的准则。 --安东尼·马拉</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">真爱的第一个征兆,在男孩身上是胆怯，在女孩身上是大胆。 --维克多·雨果</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不要着急，最好的总会在最不经意的时候出现。 --泰戈尔</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">没有受过伤的人才会讥笑别人身上的伤痕。 --莎士比亚</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最好的朋友是那种不喜欢多说，能与你默默相对而又息息相通的人。 --高尔基</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">人的一生可能燃烧也可能腐朽，我不能腐朽，我愿意燃烧起来。 --奥斯特洛夫斯基</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个人知道自己为什么而活，就可以忍受任何一种生活。 --尼采</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当你幸福的时候，切勿丧失使你幸福的德行。 --莫罗阿</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">拼着一切代价，奔你的前程。 --巴尔扎克</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们都更尽力地去避免痛苦，却不去努力地获得快乐。 --弗洛伊德</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">就投机钻营来说，世故的价值永远是无法比拟的。 --果戈里</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">她的幸福没有人分享，同样她的不幸也只能独自承担。 --茨威格</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间年复一年的，每天都要盗走我们一些东西，最终将我们自己从我们身上盗走。 --贺拉斯</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们把世界看错,反说它欺骗了我们。 --泰戈尔</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">就投机钻营来说，世故的价值永远是无法比拟的。 --果戈里</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">除了手头的青春，你一无所有，但就是你手头为数不多的这点东西，决定你会成为什么样的人。 --库切</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">盲目可以增加你的勇气，因为你无法看到危险。 --乔纳森·斯威夫特</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">心结如果真的打不开，你就给它系成个花样，其实生活就是这样。 --昂·格里夫</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使生活变成幻想,再把幻想变为现实。 --居里夫人</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果要是爱你爱的少些,话就可以说的多些了。 --简·奥斯汀</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在平静的水里，上帝会保佑我;在惊涛骇浪里，我只能保护自己。 --乔·赫伯特</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我宁肯为我所爱的幸福而千百次地牺牲自己的幸福。 --卢梭</span><br></pre></td></tr></table></figure><p>&#96;&#96;&#96;text<br>让你难过的事情，有一天你会笑着说出来。 –斯蒂芬·金</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React登录判断是否存在token</title>
      <link href="/2022/10/12/%E5%85%B3%E4%BA%8EReact-Router/"/>
      <url>/2022/10/12/%E5%85%B3%E4%BA%8EReact-Router/</url>
      
        <content type="html"><![CDATA[<h3 id="AuthRoute-jsx"><a href="#AuthRoute-jsx" class="headerlink" title="AuthRoute.jsx"></a>AuthRoute.jsx</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Navigate</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> getToken <span class="keyword">from</span> <span class="string">&quot;../utils/getToken&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">AuthRoute</span>(<span class="params">&#123; children &#125;</span>) &#123;</span><br><span class="line">  <span class="comment">// 获取token</span></span><br><span class="line">  <span class="keyword">const</span> tokenStr = <span class="title function_">getToken</span>();</span><br><span class="line">  <span class="comment">// 如果token存在 直接正常渲染</span></span><br><span class="line">  <span class="keyword">if</span> (tokenStr) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;&gt;</span>&#123;children&#125;<span class="tag">&lt;/&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 如果token不存在，重定向到登录路由</span></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">&quot;/Login&quot;</span> <span class="attr">replace</span> /&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">AuthRoute</span> &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="index-jsx"><a href="#index-jsx" class="headerlink" title="index.jsx"></a>index.jsx</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">HashRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>,</span><br><span class="line">  <span class="title class_">Routes</span>,</span><br><span class="line">  <span class="title class_">Route</span>,</span><br><span class="line">  <span class="title class_">Navigate</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthRoute</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./AuthRoute&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;../Layout/Login/Login&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">BaseRouter</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">path</span>=<span class="string">&quot;/&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">element</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          // 鉴权，判断是否有<span class="attr">token</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &lt;<span class="attr">AuthRoute</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">AuthRoute</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">);</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3组件传值</title>
      <link href="/2022/08/19/Vue3%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC/"/>
      <url>/2022/08/19/Vue3%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="VUE3"><a href="#VUE3" class="headerlink" title="VUE3"></a><a href="https://cn.vuejs.org/">VUE3</a></h2><h3 id="父子组件通信"><a href="#父子组件通信" class="headerlink" title="父子组件通信"></a>父子组件通信</h3><h4 id="1-props"><a href="#1-props" class="headerlink" title="1.props"></a><code>1.props</code></h4><h5 id="父组件"><a href="#父组件" class="headerlink" title="父组件"></a>父组件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Child</span> <span class="attr">:msg</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">:obj</span>=<span class="string">&quot;obj&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; ref, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./child.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> msg = <span class="title function_">ref</span>(<span class="string">&#x27;ref信息&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> obj = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>: <span class="string">&#x27;reactive信息&#x27;</span>&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h5 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// Vue3.2版本setup语法糖 defineProps 不需要引入可以直接使用</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">msg</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>: <span class="title class_">String</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">default</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">obj</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>: <span class="title class_">Object</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">default</span>: <span class="function">() =&gt;</span> &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;msg&#x27;</span>, props.<span class="property">msg</span>); <span class="comment">// ref信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj&#x27;</span>, props.<span class="property">obj</span>.<span class="property">name</span>); <span class="comment">// reactive信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="2-emit"><a href="#2-emit" class="headerlink" title="2.$emit"></a><code>2.$emit</code></h4><h5 id="父组件-1"><a href="#父组件-1" class="headerlink" title="父组件"></a>父组件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Child</span> @<span class="attr">myClick</span>=<span class="string">&quot;myClick&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; ref, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./child.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title function_">myClick</span> = val =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;val&#x27;</span>, val); <span class="comment">// emit传递信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h5 id="子组件-1"><a href="#子组件-1" class="headerlink" title="子组件"></a>子组件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;myClick&#x27;</span>]) <span class="comment">// 如果有多个emit事件可以往数组后边添加即可</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title function_">handleClick</span> = (<span class="params"></span>)=&gt;&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">emit</span>(<span class="string">&quot;myClick&quot;</span>, <span class="string">&quot;emit传递信息&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="兄弟组件通信"><a href="#兄弟组件通信" class="headerlink" title="兄弟组件通信"></a>兄弟组件通信</h3><p><code>npm i mitt -S</code>  (同vue2中全局事件总线)</p><h4 id="Bus-js"><a href="#Bus-js" class="headerlink" title="Bus.js"></a>Bus.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&#x27;mitt&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> emitter = <span class="title function_">mitt</span>();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> emitter;</span><br></pre></td></tr></table></figure><h5 id="A组件-emitter-emit-39-函数名-39-39-参数-39"><a href="#A组件-emitter-emit-39-函数名-39-39-参数-39" class="headerlink" title="A组件    emitter.emit(&#39;函数名&#39;,&#39;参数&#39;)"></a>A组件    <code>emitter.emit(&#39;函数名&#39;,&#39;参数&#39;)</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> <span class="title class_">Bus</span> <span class="keyword">from</span> <span class="string">&#x27;./Bus&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title function_">handleClick</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        bus.<span class="title function_">emit</span>(<span class="string">&#x27;bus&#x27;</span>, <span class="string">&#x27;Bus信息&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h5 id="B组件-emitter-on-39-函数名-39-参数-gt"><a href="#B组件-emitter-on-39-函数名-39-参数-gt" class="headerlink" title="B组件   emitter.on(&#39;函数名&#39;,(参数) =&gt; {})"></a>B组件   <code>emitter.on(&#39;函数名&#39;,(参数) =&gt; &#123;&#125;)</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> <span class="title class_">Bus</span> <span class="keyword">from</span> <span class="string">&#x27;./Bus&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    bus.<span class="title function_">on</span>(<span class="string">&#x27;bus&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;e&#x27;</span>, e) <span class="comment">// &#x27;Bus信息&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="父、孙组件通信"><a href="#父、孙组件通信" class="headerlink" title="父、孙组件通信"></a>父、孙组件通信</h3><h4 id="provide-inject-可以给后代组件传参，嵌套多少层都没问题"><a href="#provide-inject-可以给后代组件传参，嵌套多少层都没问题" class="headerlink" title="provide / inject( 可以给后代组件传参，嵌套多少层都没问题)"></a><code>provide / inject</code>( 可以给后代组件传参，嵌套多少层都没问题)</h4><h5 id="父组件：provide-39-名称-39-参数"><a href="#父组件：provide-39-名称-39-参数" class="headerlink" title="父组件：provide(&#39;名称&#39;,参数)"></a>父组件：<code>provide(&#39;名称&#39;,参数)</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Child</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./child.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; ref, provide &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> name = <span class="title function_">ref</span>(<span class="string">&#x27;provide信息&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">provide</span>(<span class="string">&#x27;name&#x27;</span>, name)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h5 id="孙组件：const-use-inject-39-名称-39"><a href="#孙组件：const-use-inject-39-名称-39" class="headerlink" title="孙组件：const use = inject(&#39;名称&#39;)"></a>孙组件：<code>const use = inject(&#39;名称&#39;)</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>后代组件name &#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; inject &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> name = <span class="title function_">inject</span>(<span class="string">&#x27;name&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;name&#x27;</span>, name.<span class="property">value</span>) <span class="comment">// provide信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite创建项目</title>
      <link href="/2022/08/19/vite%E5%88%9B%E5%BB%BAvue3/"/>
      <url>/2022/08/19/vite%E5%88%9B%E5%BB%BAvue3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vitejs.cn/">Vite</a></p><h2 id="安装Vite"><a href="#安装Vite" class="headerlink" title="安装Vite"></a>安装Vite</h2><p><code>npm i -g create-vite-app</code></p><h3 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h3><p><code>npm init vite instead</code></p><p>选择你需要创建的框架</p><p><img src="http://music.youah.cc/music/images/vite4.png"></p><h2 id="此命令行可直接创建一个vue项目"><a href="#此命令行可直接创建一个vue项目" class="headerlink" title="此命令行可直接创建一个vue项目"></a>此命令行可直接创建一个vue项目</h2><h3 id="使用-create-vite-app-创建项目"><a href="#使用-create-vite-app-创建项目" class="headerlink" title="使用 create-vite-app 创建项目"></a>使用 create-vite-app 创建项目</h3><p><code>create-vite-app 项目名称</code></p><h3 id="创建完成，根据提示进入到项目目录，安装依赖"><a href="#创建完成，根据提示进入到项目目录，安装依赖" class="headerlink" title="创建完成，根据提示进入到项目目录，安装依赖"></a>创建完成，根据提示进入到项目目录，安装依赖</h3><p><code> cd 项目名称</code> </p><p><code>npm install</code></p><p><img src="http://music.youah.cc/music/images/vite2.png"></p><h3 id="安装完依赖，运行项目"><a href="#安装完依赖，运行项目" class="headerlink" title="安装完依赖，运行项目"></a>安装完依赖，运行项目</h3><p><code>npm run dev</code></p><h3 id="生成项目目录及运行图片如下："><a href="#生成项目目录及运行图片如下：" class="headerlink" title="生成项目目录及运行图片如下："></a>生成项目目录及运行图片如下：</h3><p><img src="http://music.youah.cc/music/images/vite3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Vite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奇怪的东西(未完结)</title>
      <link href="/2022/05/07/%E5%A5%87%E6%80%AA%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/05/07/%E5%A5%87%E6%80%AA%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 当很多注释时</span></span><br><span class="line"><span class="comment">//#region</span></span><br><span class="line"><span class="comment">// vue2实现响应式</span></span><br><span class="line"><span class="comment">// Object.defineProperty(p, &#x27;name&#x27;, &#123;</span></span><br><span class="line"><span class="comment">//     configurable: true,</span></span><br><span class="line"><span class="comment">//     get() &#123;</span></span><br><span class="line"><span class="comment">//         return person.name</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     set(value) &#123;</span></span><br><span class="line"><span class="comment">//         console.log(&#x27;@@@&#x27;);</span></span><br><span class="line"><span class="comment">//         person.name = value</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// Object.defineProperty(p, &#x27;age&#x27;, &#123;</span></span><br><span class="line"><span class="comment">//     get() &#123;</span></span><br><span class="line"><span class="comment">//         return person.age</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     set(value) &#123;</span></span><br><span class="line"><span class="comment">//         console.log(&#x27;###&#x27;);</span></span><br><span class="line"><span class="comment">//         person.age = value</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">//#endregion</span></span><br></pre></td></tr></table></figure><p><code>//#region</code></p><p><code>//#endregion</code></p><p>在代码折叠时，在下面继续写时就不会展开</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模拟Vue3 中实现响应式</span></span><br><span class="line"><span class="keyword">const</span> ps = <span class="keyword">new</span> <span class="title class_">Proxy</span>(person, &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">target, propName</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;propName&#125;</span>被读取了`</span>);</span><br><span class="line">        <span class="comment">// return target[propName];</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, propName)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">target, propName, value</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;propName&#125;</span>被修改了`</span>);</span><br><span class="line">        <span class="comment">// target[propName] = value;</span></span><br><span class="line">        <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, propName, value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//#region</span></span><br><span class="line"><span class="comment">// try &#123;</span></span><br><span class="line"><span class="comment">//     Object.defineProperty(obj, &#x27;c&#x27;, &#123;</span></span><br><span class="line"><span class="comment">//         get() &#123;</span></span><br><span class="line"><span class="comment">//             return 4</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;);</span></span><br><span class="line"><span class="comment">//     Object.defineProperty(obj, &#x27;c&#x27;, &#123;</span></span><br><span class="line"><span class="comment">//         get() &#123;</span></span><br><span class="line"><span class="comment">//             return 4</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;);</span></span><br><span class="line"><span class="comment">// &#125; catch (error) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(error);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//#endregion</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue和React代理模式</title>
      <link href="/2022/05/02/%E4%BB%A3%E7%90%86%E8%B7%A8%E5%9F%9F/"/>
      <url>/2022/05/02/%E4%BB%A3%E7%90%86%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="vue中代理服务器"><a href="#vue中代理服务器" class="headerlink" title="vue中代理服务器"></a>vue中代理服务器</h2><p>vue.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: &#123;</span><br><span class="line">            <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8086/&#x27;</span>, <span class="comment">// 要跨域的域名</span></span><br><span class="line">            <span class="attr">changeOrigin</span>: <span class="literal">true</span>, <span class="comment">// 是否开启跨域</span></span><br><span class="line">            <span class="comment">// ws: true, //用于支持webpack</span></span><br><span class="line">            <span class="attr">pathRewrite</span>: &#123; <span class="string">&quot;^/api&quot;</span>: <span class="string">&quot;/user&quot;</span> &#125;, <span class="comment">// 用api 代替 user路径</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>api</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getTest</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;/api&#x27;</span>);  <span class="comment">// http://localhost:8086/user</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在服务器上，vue-cli-servece 不能正常检测到公网ip，而是直接使用了局域网的ip。这就导致ws的域名是内网ip,websocket通信失败。</p><p>修改配置文档链接：<a href="https://webpack.js.org/configuration/dev-server/#devserverclient"><a href="https://webpack.js.org/configuration/dev-server/#devserverclient">DevServer | webpack</a></a></p><p>或者将</p><p><strong>ws: false</strong></p><h2 id="React中代理服务器"><a href="#React中代理服务器" class="headerlink" title="React中代理服务器"></a>React中代理服务器</h2><h4 id="1-在react中需先解包"><a href="#1-在react中需先解包" class="headerlink" title="1.在react中需先解包"></a>1.在react中需先解包</h4><p><code>npm run ejec 或 yarn eject</code></p><p><strong>注意</strong>：报错原因可能你没有提交代码，所以git会拦截解包过程，所以<br>git add . –&gt; git commit -m ‘eject’ –&gt; git push origin 分支</p><p>在解包后有一个 config 文件夹生成，进入后找到 <code>webpack.config.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&quot;http://localhost:8086/&quot;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&quot;^/api&quot;</span>: <span class="string">&quot;/&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>api</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getTest</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;/api&#x27;</span>);  <span class="comment">// http://localhost:8086/user</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-在package-json中追加如下配置"><a href="#2-在package-json中追加如下配置" class="headerlink" title="2.在package.json中追加如下配置"></a>2.在package.json中追加如下配置</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;proxy&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://localhost:5000&quot;</span></span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：配置简单，前端请求资源时可以不加任何前缀。</li><li>缺点：不能配置多个代理。</li><li>工作方式：上述方式配置代理，当请求了3000不存在的资源时，那么该请求会转发给5000 （优先匹配前端资源）</li></ol><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><ol><li><p>第一步：创建代理配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在src下创建配置文件：src/setupProxy.js</span><br></pre></td></tr></table></figure></li><li><p>编写setupProxy.js配置具体代理规则：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> proxy = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">app</span>) &#123;</span><br><span class="line">  app.<span class="title function_">use</span>(</span><br><span class="line">    <span class="title function_">proxy</span>(<span class="string">&#x27;/api1&#x27;</span>, &#123;  <span class="comment">//api1是需要转发的请求(所有带有/api1前缀的请求都会转发给5000)</span></span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;http://localhost:5000&#x27;</span>, <span class="comment">//配置转发目标地址(能返回数据的服务器地址)</span></span><br><span class="line">      <span class="attr">changeOrigin</span>: <span class="literal">true</span>, <span class="comment">//控制服务器接收到的请求头中host字段的值</span></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      changeOrigin设置为true时，服务器收到的请求头中的host为：localhost:5000</span></span><br><span class="line"><span class="comment">      changeOrigin设置为false时，服务器收到的请求头中的host为：localhost:3000</span></span><br><span class="line"><span class="comment">      changeOrigin默认值为false，但我们一般将changeOrigin值设为true</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="attr">pathRewrite</span>: &#123;<span class="string">&#x27;^/api1&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125; <span class="comment">//去除请求前缀，保证交给后台服务器的是正常请求地址(必须配置)</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title function_">proxy</span>(<span class="string">&#x27;/api2&#x27;</span>, &#123; </span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;http://localhost:5001&#x27;</span>,</span><br><span class="line">      <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">pathRewrite</span>: &#123;<span class="string">&#x27;^/api2&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>说明：</p><ol><li>优点：可以配置多个代理，可以灵活的控制请求是否走代理。</li><li>缺点：配置繁琐，前端请求资源时必须加前缀。</li></ol><h2 id="在项目上线时，代理模式是没有用的"><a href="#在项目上线时，代理模式是没有用的" class="headerlink" title="在项目上线时，代理模式是没有用的"></a>在项目上线时，代理模式是没有用的</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baseURL</span>: <span class="string">&quot;http://localhost:8086/&quot;</span>,  <span class="comment">// 将基础路径改为你代理时的路径即可</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代理模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代理模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Router</title>
      <link href="/2022/04/23/Router1/"/>
      <url>/2022/04/23/Router1/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue-Router"><a href="#Vue-Router" class="headerlink" title="Vue Router"></a><a href="https://router.vuejs.org/installation.html">Vue Router</a></h2><p><strong>npm（当你的vue版本是2时请安装@3版本的router）</strong></p><p><code>npm install vue-router@4</code></p><p><code>npm install vue-router@3</code></p><p><strong>yarn（同上）</strong></p><p><code>npm install vue-router@4</code> </p><p><code>npm install vue-router@3</code></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>请现在 src 文件内创建 router文件夹，并在此文件夹下创建 index.js</p><p><strong>index.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="comment">// 暴露 Roueter</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>main.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    router,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>实现切换</strong></p><p><code>&lt;router-link to=&#39;/xxx&#39;&gt;&lt;/router-link&gt; </code>  &#x3D;&#x3D;&#x3D;&gt;  编译时转换为a标签 因此如果标签有样式会生效</p><p><strong>指定展示位置</strong></p><p><code>&lt;router-view&gt;&lt;/router-view&gt;</code></p><h3 id="生命不止，套娃不止—router"><a href="#生命不止，套娃不止—router" class="headerlink" title="生命不止，套娃不止—router"></a>生命不止，套娃不止—router</h3><p><strong>index.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xxx <span class="keyword">from</span> <span class="string">&#x27;./aaa&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> yyy <span class="keyword">from</span> <span class="string">&#x27;./bbb&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> zzz <span class="keyword">from</span> <span class="string">&#x27;./ccc&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    <span class="attr">routers</span>: [&#123;</span><br><span class="line">            <span class="comment">// 一级路由</span></span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/xxx&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: xxx,</span><br><span class="line">            <span class="attr">children</span>: [&#123;</span><br><span class="line">                    <span class="comment">// 二级路由</span></span><br><span class="line">                    <span class="attr">path</span>: <span class="string">&#x27;yyy&#x27;</span>,  <span class="comment">// 此时不能加 / </span></span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;yyy&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>: yyy,</span><br><span class="line">                    <span class="attr">children</span>: [&#123;</span><br><span class="line">                            <span class="attr">path</span>: <span class="string">&#x27;zzz&#x27;</span>,</span><br><span class="line">                            <span class="attr">name</span>: <span class="string">&#x27;zzz&#x27;</span>,</span><br><span class="line">                            component； zzz</span><br><span class="line">                   &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>&lt;router-link to=&#39;/xxx/yyy/zzz&#39;&gt;&lt;/router-link&gt;</code></p><p><code>&lt;router-view&gt;&lt;/router-view&gt;</code>  <strong>在嵌套时，也需要在嵌套的vue页面添加</strong></p><h3 id="路由传参"><a href="#路由传参" class="headerlink" title="路由传参"></a>路由传参</h3><h4 id="query"><a href="#query" class="headerlink" title="query:"></a>query:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- to 的字符串写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;`/xxx?id=$&#123;参数&#125;&amp;name=$&#123;参数&#125;`&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- to 的对象写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; path:&#x27;/xxx&#x27;, query:&#123; id: 参数, name: 参数 &#125; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将path 转换为 name  此时的name 需要与index.js中定义路由的name相匹配--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; name:&#x27;xxx&#x27;, query:&#123; id: 参数, name: 参数 &#125; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="接收参数"><a href="#接收参数" class="headerlink" title="接收参数:"></a>接收参数:</h5><p><code>id: &#123;&#123;$route.query.id&#125;&#125; name: &#123;&#123;$route.query.name&#125;&#125;</code></p><h4 id="params"><a href="#params" class="headerlink" title="params:"></a>params:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- to 的字符串写法 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;`/xxx/$&#123;参数&#125;/$&#123;参数&#125;&quot;&gt;&lt;/router-link&gt;</span><br><span class="line">&lt;!-- to 的对象写法 --&gt;  &lt;!-- params 传递参数不能用path 只能用name --&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123; name:&#x27;xxx&#x27;, params:&#123; id: 参数, name: 参数 &#125; &#125;&quot;&gt;&lt;/router-link&gt;</span><br><span class="line">    path: &#x27;/xxx/:id/:name&#x27;,</span><br><span class="line">    name: &#x27;xxx&#x27;,</span><br><span class="line">    component: xxx,</span><br></pre></td></tr></table></figure><h5 id="接收参数-1"><a href="#接收参数-1" class="headerlink" title="接收参数:"></a>接收参数:</h5><p><code>id: &#123;&#123;$route.params.id&#125;&#125; name: &#123;&#123;$route.params.name&#125;&#125;</code></p><h4 id="props"><a href="#props" class="headerlink" title="props:"></a>props:</h4><p><strong>index.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">path</span>: <span class="string">&#x27;zzz&#x27;</span>,</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;zzz&#x27;</span>,</span><br><span class="line">component； zzz</span><br><span class="line"><span class="comment">// 第一种写法 值为对象，该对象中所有key-value都会以props的形式传给zzz组件</span></span><br><span class="line"><span class="attr">props</span>: &#123;<span class="attr">id</span>: <span class="number">1</span> , <span class="attr">name</span>: <span class="string">&#x27;youah&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种写法 值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给zzz组件</span></span><br><span class="line"><span class="comment">// 此时只能收到params参数</span></span><br><span class="line"><span class="attr">props</span>: <span class="literal">true</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 第三种写法 值为函数</span></span><br><span class="line"><span class="title function_">props</span>(<span class="params">$route</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">id</span>: $router.<span class="property">query</span>.<span class="property">id</span> , <span class="attr">name</span>: $router.<span class="property">query</span>.<span class="property">name</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 简写</span></span><br><span class="line"><span class="title function_">props</span>(<span class="params">&#123;query:&#123;id,name&#125;&#125;</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;id, name&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="接收参数-2"><a href="#接收参数-2" class="headerlink" title="接收参数:"></a>接收参数:</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    第一种写法</span><br><span class="line">    id:&#123;&#123;id&#125;&#125;</span><br><span class="line">    name:&#123;&#123;name&#125;&#125;</span><br><span class="line">    第二种写法</span><br><span class="line">    id:&#123;&#123;id&#125;&#125;  此时的id和name &lt;router-link :to=&quot;&#123; name:&#x27;xxx&#x27;, params:&#123; id: 参数, name: 参数 &#125; &#125;&quot;&gt;&lt;/router-link&gt;</span><br><span class="line">    name:&#123;&#123;name&#125;&#125;</span><br><span class="line">    第三种写法</span><br><span class="line">    id:&#123;&#123;id&#125;&#125;  &lt;router-link :to=&quot;&#123; path:&#x27;/xxx&#x27;, query:&#123; id: 参数, name: 参数 &#125; &#125;&quot;&gt;&lt;/router-link&gt;</span><br><span class="line">    name:&#123;&#123;name&#125;&#125;  </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">props:[&#x27;id&#x27;,&#x27;name&#x27;]</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="历史操作"><a href="#历史操作" class="headerlink" title="历史操作"></a>历史操作</h3><p><code>&lt;router-link to=&#39;/xxx&#39;&gt;&lt;/router-link&gt;</code>   默认为push，也就是可以前进后退</p><p><code>&lt;router-link :replace=&quot;true&quot; to=&#39;/xxx&#39;&gt;&lt;/router-link&gt; </code> 此时点击后就无法返回你上一个页面</p><h3 id="路由的前进和后退"><a href="#路由的前进和后退" class="headerlink" title="路由的前进和后退"></a>路由的前进和后退</h3><h4 id="前进"><a href="#前进" class="headerlink" title="前进:"></a>前进:</h4><p><code>back()&#123; this.$router.back() &#125;</code></p><p><code>this.$router.go(-1)</code>  括号里面的数字代表前进或后退的页数(符号代表后退)</p><h4 id="后退"><a href="#后退" class="headerlink" title="后退:"></a>后退:</h4><p><code>forward()&#123; this.$router.forward() &#125;</code></p><h3 id="缓存路由组件"><a href="#缓存路由组件" class="headerlink" title="缓存路由组件"></a>缓存路由组件</h3><p><code>&lt;keep-alive include=&quot;组件名称&quot;&gt;&lt;router-link&gt;&lt;/router-link&gt;&lt;/keep-alive&gt;</code>  include 属性 可以指定不让该组件销毁，保存数据</p><p><code>&lt;keep-alive include=&quot;[&#39;组件名称1&#39;,&#39;组件名称2&#39;]&quot;&gt;&lt;router-link&gt;&lt;/router-link&gt;&lt;/keep-alive&gt;</code>  指定多个需要用数组</p><h3 id="路由独有的生命周期函数-钩子"><a href="#路由独有的生命周期函数-钩子" class="headerlink" title="路由独有的生命周期函数(钩子)"></a>路由独有的生命周期函数(钩子)</h3><p><code>activated()&#123;&#125;</code>  <code>deactivated()&#123;&#125;</code>    <strong>这两个生命周期函数只有在keep-alive包裹下才起作用</strong></p><h3 id="路由守卫"><a href="#路由守卫" class="headerlink" title="路由守卫"></a>路由守卫</h3><h4 id="全局前置路由守卫"><a href="#全局前置路由守卫" class="headerlink" title="全局前置路由守卫"></a>全局前置路由守卫</h4><p>&#x3D;&#x3D;&gt;  <strong>初始化的时候和每次路由切换之前被调用</strong></p><p><code>router.beforeEach((to, from, next) =&gt; &#123;&#125;)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/Person&#x27;</span>,</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line"><span class="attr">component</span>: <span class="title class_">Person</span>,</span><br><span class="line"><span class="attr">meta</span>: &#123; <span class="attr">isAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    </span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(to, <span class="keyword">from</span>);</span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">meta</span>.<span class="property">isAuth</span>) &#123;  <span class="comment">// 判断是否需要鉴权</span></span><br><span class="line">        <span class="comment">// 此时的 school 是存在本地的 然后进行判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;school&#x27;</span>) === <span class="string">&#x27;youah&#x27;</span>) &#123; <span class="comment">// 判断是否正确，正确则可以看到router-view</span></span><br><span class="line">            <span class="title function_">next</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;111&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="全局后置路由守卫"><a href="#全局后置路由守卫" class="headerlink" title="全局后置路由守卫"></a>全局后置路由守卫</h4><p>&#x3D;&#x3D;&gt;  <strong>初始化的时候和每次路由切换之后被调用</strong></p><p><code>router.afterEach((to, from) =&gt; &#123;&#125;);</code></p><h4 id="独享路由守卫"><a href="#独享路由守卫" class="headerlink" title="独享路由守卫"></a>独享路由守卫</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/Person&#x27;</span>,</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line"><span class="attr">component</span>: <span class="title class_">Person</span>,</span><br><span class="line"><span class="attr">meta</span>: &#123; <span class="attr">isAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"><span class="attr">beforeEnter</span>: (<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">meta</span>.<span class="property">isAuth</span>) &#123;  <span class="comment">// 判断是否需要鉴权</span></span><br><span class="line">        <span class="comment">// 此时的 school 是存在本地的 然后进行判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;school&#x27;</span>) === <span class="string">&#x27;youah&#x27;</span>) &#123; <span class="comment">// 判断是否正确，正确则可以看到router-view</span></span><br><span class="line">            <span class="title function_">next</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;111&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><h4 id="组件内路由守卫"><a href="#组件内路由守卫" class="headerlink" title="组件内路由守卫"></a>组件内路由守卫</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过路由规则，进入该组件被调用</span></span><br><span class="line"><span class="title function_">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;beforeRouteEnter&quot;</span>, to, <span class="keyword">from</span>, next);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 通过路由规则，离开该组件被调用</span></span><br><span class="line"><span class="title function_">beforeRouteLeave</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;beforeRouteLeave&quot;</span>, to, <span class="keyword">from</span>, next);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="路由工作模式"><a href="#路由工作模式" class="headerlink" title="路由工作模式"></a>路由工作模式</h3><p><code>mode:hash</code>  &#x3D;&#x3D;&gt;  &#x2F;#&#x2F;</p><p><code>mode:history</code> &#x3D;&#x3D;&gt;  &#x2F;     应用部署上线时需要后端支持，解决刷新页面服务404问题</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/21/hello-world/"/>
      <url>/2022/04/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建react模板</title>
      <link href="/2022/02/24/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAreact%E6%A8%A1%E6%9D%BF/"/>
      <url>/2022/02/24/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAreact%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><strong>本项目由 vite创建</strong></p><blockquote><p>npm init vite acro</p></blockquote><blockquote><p>cd acro</p></blockquote><blockquote><p>npm install</p></blockquote><blockquote><p>npm run dev</p></blockquote><h3 id="安装-路由、状态管理库、网络请求库、CSS预处理器"><a href="#安装-路由、状态管理库、网络请求库、CSS预处理器" class="headerlink" title="安装 路由、状态管理库、网络请求库、CSS预处理器"></a>安装 路由、状态管理库、网络请求库、CSS预处理器</h3><blockquote><p>npm install react-router-dom react-redux redux axios reset-css</p></blockquote><blockquote><p>npm install –save-dev less less-loader</p></blockquote><h3 id="eslint-和-prettierrc"><a href="#eslint-和-prettierrc" class="headerlink" title="eslint 和 prettierrc"></a>eslint 和 prettierrc</h3><blockquote><p>npm install @typescript-eslint&#x2F;eslint-plugin eslint eslint-config-prettier eslint-import-resolver-typescript eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-prettier eslint-plugin-react prettier prettier-eslint -D</p></blockquote><h3 id="在主目录下创建"><a href="#在主目录下创建" class="headerlink" title="在主目录下创建"></a>在主目录下创建</h3><p><strong>.prettierrc.cjs</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">printWidth</span>: <span class="number">80</span>, <span class="comment">//单行长度</span></span><br><span class="line">  <span class="attr">tabWidth</span>: <span class="number">2</span>, <span class="comment">//缩进长度</span></span><br><span class="line">  <span class="attr">useTabs</span>: <span class="literal">false</span>, <span class="comment">//使用空格代替tab缩进</span></span><br><span class="line">  <span class="attr">semi</span>: <span class="literal">true</span>, <span class="comment">//句末使用分号</span></span><br><span class="line">  <span class="attr">singleQuote</span>: <span class="literal">false</span>, <span class="comment">//使用单引号</span></span><br><span class="line">  <span class="attr">quoteProps</span>: <span class="string">&quot;as-needed&quot;</span>, <span class="comment">//仅在必需时为对象的key添加引号</span></span><br><span class="line">  <span class="attr">jsxSingleQuote</span>: <span class="literal">true</span>, <span class="comment">// jsx中使用单引号</span></span><br><span class="line">  <span class="attr">trailingComma</span>: <span class="string">&quot;all&quot;</span>, <span class="comment">//多行时尽可能打印尾随逗号</span></span><br><span class="line">  <span class="attr">bracketSpacing</span>: <span class="literal">true</span>, <span class="comment">//在对象前后添加空格-eg: &#123; foo: bar &#125;</span></span><br><span class="line">  <span class="attr">jsxBracketSameLine</span>: <span class="literal">true</span>, <span class="comment">//多属性html标签的‘&gt;’折行放置</span></span><br><span class="line">  <span class="attr">arrowParens</span>: <span class="string">&quot;avoid&quot;</span>, <span class="comment">//单参数箭头函数参数周围使用圆括号-eg: (x) =&gt; x</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>.prettierignore</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># <span class="title class_">Ignore</span> <span class="attr">artifacts</span>:</span><br><span class="line">build</span><br><span class="line">coverage</span><br><span class="line"></span><br><span class="line"># <span class="title class_">Ignore</span> all <span class="variable constant_">HTML</span> <span class="attr">files</span>:</span><br><span class="line">*.<span class="property">html</span></span><br></pre></td></tr></table></figure><p><strong>.eslintrc.cjs</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">root</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">    <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:react/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:import/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:@typescript-eslint/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:prettier/recommended&quot;</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="string">&quot;react&quot;</span>, <span class="string">&quot;prettier&quot;</span>],</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;no-unused-vars&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;react/react-in-jsx-scope&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">settings</span>: &#123;</span><br><span class="line">    <span class="string">&quot;import/resolver&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">typescript</span>: &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">react</span>: &#123;</span><br><span class="line">      <span class="attr">version</span>: <span class="string">&quot;detect&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>.eslintignore</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public</span><br><span class="line">dist</span><br><span class="line">*.<span class="property">d</span>.<span class="property">ts</span></span><br><span class="line">/src/assets</span><br><span class="line">package.<span class="property">json</span></span><br><span class="line">.<span class="property">eslintrc</span>.<span class="property">cjs</span></span><br><span class="line">.<span class="property">prettierrc</span>.<span class="property">js</span></span><br><span class="line">stylelint.<span class="property">config</span>.<span class="property">js</span></span><br><span class="line">*.<span class="property">svg</span></span><br><span class="line">*.<span class="property">css</span></span><br></pre></td></tr></table></figure><p><strong>.editorconfig</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[*]</span><br><span class="line">charset = utf-<span class="number">8</span></span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = <span class="number">2</span></span><br><span class="line">end_of_line = lf</span><br><span class="line">insert_final_newline = <span class="literal">true</span></span><br><span class="line">trim_trailing_whitespace = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[*.<span class="property">md</span>]</span><br><span class="line">insert_final_newline = <span class="literal">false</span></span><br><span class="line">trim_trailing_whitespace = <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;lint:prettier&quot;</span>: <span class="string">&quot;npx prettier --write  \&quot;src/**/*.&#123;js,ts,json,tsx,css,less,scss,html,md&#125;\&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lint:eslint&quot;</span>: <span class="string">&quot;eslint --ext .js --ext .jsx src/* \&quot;&#123;src,mock,build&#125;/**/*.&#123;js,ts,tsx&#125;\&quot; --fix&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lint&quot;</span>: <span class="string">&quot;npm run lint:eslint &amp;&amp; npm run lint:prettier&quot;</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="安装组件库-ArcoDesign"><a href="#安装组件库-ArcoDesign" class="headerlink" title="安装组件库 ArcoDesign"></a>安装组件库 <a href="https://arco.design/react/docs/start">ArcoDesign</a></h3><p><code>使用 npm</code></p><p>npm i @arco-design&#x2F;web-react</p><p><code>使用 yarn</code></p><p>yarn add @arco-design&#x2F;web-react</p><h3 id="在主目录下创建-1"><a href="#在主目录下创建-1" class="headerlink" title="在主目录下创建"></a>在主目录下创建</h3><p><strong>router</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HashRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;../App.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;../views/Login&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">BaseRouter</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#x27;/&#x27;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#x27;/main&#x27;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">App</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">BaseRouter</span>;</span><br></pre></td></tr></table></figure><p><strong>Layout index.tsx</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Outlet</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Layout</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@arco-design/web-react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LayoutSider</span> <span class="keyword">from</span> <span class="string">&quot;./components/Sider&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LayoutHeader</span> <span class="keyword">from</span> <span class="string">&quot;./components/Header&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LayoutFooter</span> <span class="keyword">from</span> <span class="string">&quot;./components/Footer&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LayoutBreadCrumb</span> <span class="keyword">from</span> <span class="string">&quot;./components/Breadcrumb&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.less&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Content</span> = <span class="title class_">Layout</span>.<span class="property">Content</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">LayoutIndex</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Layout</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&#x27;layout-collapse-demo&#x27;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">height:</span> &quot;<span class="attr">100vh</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width:</span> &quot;<span class="attr">100vw</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">flexDirection:</span> &quot;<span class="attr">row</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">LayoutSider</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Layout</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">LayoutHeader</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Layout</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">0</span> <span class="attr">24px</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">LayoutBreadCrumb</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">LayoutFooter</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">LayoutIndex</span>;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.layout-collapse-demo</span> &#123;</span><br><span class="line">  <span class="comment">// border: 1px solid var(--color-border);</span></span><br><span class="line">  <span class="attribute">background</span>: var(--color-fill-<span class="number">2</span>);</span><br><span class="line">  <span class="selector-class">.arco-layout-sider</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">12px</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.arco-layout-sider-light</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: var(--color-fill-<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.arco-layout-footer</span>,</span><br><span class="line">  <span class="selector-class">.arco-layout-content</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: var(--color-white);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-stretch</span>: condensed;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.arco-layout-footer</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: var(--color-text-<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.arco-layout-content</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: var(--color-bg-<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">color</span>: var(--color-text-<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.arco-layout-header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">64px</span>;</span><br><span class="line">    <span class="attribute">background</span>: var(--color-bg-<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.arco-layout-header</span> <span class="selector-class">.trigger</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>view Login index.tsx</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@arco-design/web-react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Login</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&#x27;primary&#x27;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          navigate(&quot;/main&quot;);</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        登录</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Login</span>;</span><br></pre></td></tr></table></figure><hr><p><code>冷知识：今天是世界讨厌香菜日！</code></p><h1 id="把不爱吃香菜的全部拉去种香菜"><a href="#把不爱吃香菜的全部拉去种香菜" class="headerlink" title="把不爱吃香菜的全部拉去种香菜"></a>把不爱吃香菜的全部拉去种香菜</h1>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
